---
# tasks file for eclipse

- name: Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Create the temporary directory
  ansible.builtin.file:
    path: "{{ eclipse_tmp_path }}/eclipse-{{ eclipse_release }}"
    recurse: yes
    state: directory
    mode: "0755"

- name: Unarchive eclipse to temporary directory
  ansible.builtin.unarchive:
    src: "{{ eclipse_archive }}"
    dest: "{{ eclipse_tmp_path }}/eclipse-{{ eclipse_release }}"
    remote_src: yes
    creates: "{{ eclipse_tmp_path }}/eclipse-{{ eclipse_release }}/eclipse"
    mode: "0755"

- name: Create the installation directory
  ansible.builtin.file:
    path: "{{ eclipse_install_path }}"
    recurse: yes
    state: directory
    mode: "0755"

- name: Copy temporary installation files to the installation destination
  ansible.builtin.copy:
    src: "{{ eclipse_tmp_path }}/eclipse-{{ eclipse_release }}/eclipse/"
    dest: "{{ eclipse_install_path }}/"
    remote_src: yes
  delegate_to: "{{ inventory_hostname }}"

- name: Link eclipse to /usr/bin/eclipse
  ansible.builtin.file:
    src: "{{ eclipse_install_path }}/eclipse"
    dest: /usr/bin/eclipse
    state: link
    mode: "0755"

- name: Link eclipse to requested paths
  ansible.builtin.file:
    src: "{{ eclipse_install_path }}"
    dest: "{{ item }}"
    state: link
  loop: "{{ eclipse_link_paths }}"
  when:
    - eclipse_link_paths | length > 0

- name: Install plugins
  ansible.builtin.command:
    cmd: "{{ eclipse_plugin_install_command }} \"{{ item.name }}\""
    creates: "{{ eclipse_install_path }}/features/{{ item.name | regex_replace('.feature.group.*') }}*"
  loop: "{{ eclipse_plugins }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create desktop icon for eclipse
  ansible.builtin.template:
    src: eclipse.desktop.j2
    dest: /usr/share/applications/eclipse-{{ eclipse_release }}.desktop
    mode: "0755"
